# Generated by Django 3.0.6 on 2020-07-16 15:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Businesscategorytable',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('icon', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'businessCategoryTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Businessestable',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('phone', models.IntegerField()),
                ('details', models.TextField(blank=True, null=True)),
                ('address', models.TextField()),
                ('photo', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'businessesTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Interestitemtable',
            fields=[
                ('interest_item_table_id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField()),
            ],
            options={
                'db_table': 'interestItemTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemtable',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=6)),
                ('price', models.TextField(blank=True, null=True)),
                ('publishdate', models.DateField(db_column='publishDate')),
            ],
            options={
                'db_table': 'itemTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messagestable',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'messagesTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Requesttable',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(blank=True, null=True)),
                ('publishdate', models.DateField(blank=True, db_column='publishDate', null=True)),
                ('publishtime', models.TimeField(blank=True, db_column='publishTime', null=True)),
                ('finishdate', models.DateField(blank=True, db_column='finishDate', null=True)),
                ('finishtime', models.TimeField(blank=True, db_column='finishTime', null=True)),
            ],
            options={
                'db_table': 'requestTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ridetable',
            fields=[
                ('ride_table_id', models.AutoField(primary_key=True, serialize=False)),
                ('radius', models.SmallIntegerField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
            ],
            options={
                'db_table': 'rideTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Typeoftreatmenttable',
            fields=[
                ('type', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'typeOfTreatmentTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userstable',
            fields=[
                ('firstname', models.CharField(db_column='firstName', max_length=15)),
                ('lastname', models.CharField(db_column='lastName', max_length=15)),
                ('phone', models.IntegerField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=9)),
                ('housenumber', models.SmallIntegerField(db_column='houseNumber')),
                ('email', models.CharField(blank=True, max_length=256, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('photo', models.BinaryField(blank=True, null=True)),
                ('apartmentnumber', models.SmallIntegerField(blank=True, db_column='apartmentNumber', null=True)),
                ('street', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'usersTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Managertable',
            fields=[
                ('phone', models.OneToOneField(db_column='phone', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='MyApp.Userstable')),
            ],
            options={
                'db_table': 'managerTable',
                'managed': False,
            },
        ),
    ]
